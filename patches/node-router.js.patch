--- /djuio/server/vendor/node-router/lib/node-router.js
+++ /djuio/server/lib/node-router.js
@@ -36,7 +36,8 @@
     "Content-Type": "text/plain",
     "Content-Length": message.length
   });
-  res.write(message);
+  if (req.method !== "HEAD")
+    res.write(message);
   res.end();
 }
 
@@ -95,6 +96,9 @@
   function del(pattern, handler) {
     return addRoute("DELETE", pattern, handler);
   }
+  function head(pattern, handler) {
+    return addRoute("HEAD", pattern, handler);
+  }
 
   // This is a meta pattern that expands to a common RESTful mapping
   function resource(name, controller, format) {
@@ -181,7 +185,8 @@
                            [ ["Content-Type", content_type],
                              ["Content-Length", Buffer.byteLength(body, 'utf8')]
                            ]));
-      res.write(body, 'utf8');
+      if (req.method !== "HEAD")
+        res.write(body, 'utf8');
       res.end();
     }
 
@@ -200,7 +205,13 @@
     res.notFound = function (message) {
       notFound(req, res, message);
     };
-
+    
+    res.onlyHead = function (code, extra_headers) {
+      res.writeHead(code, (extra_headers || []).concat(
+                           [["Content-Type", content_type]]));
+      res.end();
+    }
+    
     function doRoute() {
       uri = url_parse(req.url);
       path = uri.pathname;
@@ -258,11 +269,6 @@
       host = host || "127.0.0.1";
     }
     server.listen(port, host);
-    if (typeof port === 'number') {
-      logger("node-router server instance at http://" + host + ":" + port + "/");
-    } else {
-      logger("node-router server instance at unix:" + port);
-    }
   }
   
   function end() {
@@ -315,7 +321,8 @@
   return function (req, res) {
     loadResponseData(req, res, function () {
       res.writeHead(200, headers);
-      res.write(body, encoding);
+      if (req.method !== "HEAD")
+        res.write(body, encoding);
       res.end();
     });
   };
@@ -348,7 +355,8 @@
     if (filename == root) filename = path.join(root, 'index.html');
     loadResponseData(req, res, filename, function(headers, body, encoding) {
       res.writeHead(200, headers);
-      res.write(body, encoding);
+      if (req.method !== "HEAD")
+        res.write(body, encoding);
       res.end();
     });
   };
